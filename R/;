#' A Fucntion to write a matrix to an STL File
#'
#' @param STL a STL
#' @param filename A the name of the file to save out. A srting.
#' @return None
#' @export

write_stl3<- function(df, filename, ASCII = TRUE){
	if (class(filename)!='character' | length(filename) != 1){
		stop('filename must be a string')
	}
	if (!ASCII){
		writer <- binary_writer
	} else {
		writer <- ascii_writer
	}

	top_constructor <- function(...){
		inputs <- as.list(substitute(...()))
		top_pass<- function(x,y){
			triangles <- map_dbl(inputs, eval, envir = environment()) %>%
				array(dim=c(3,3,2))
			if (!all(rev(triangles[3,,1]) == triangles[3,,2])){
				triangles %>%
					array_branch(3) %>%
					walk(writer, con)
			}
		}
		return(top_pass)
	}
	side_constructor <- function(...){
		inputs <- as.list(substitute(...()))
		side_pass<- function(x,y){
			triangles <- map_dbl(inputs, eval, envir = environment()) %>%
				array(dim=c(3,3,4)) %>%
				array_branch(3) %>%
				walk(function(triangle) {
					if (length(unique(triangle[,3]))>1){
  						writer(triangle, con)
					}
					})
			}
		return(side_pass)
		}

	pass_1 <- top_constructor(
				x, y+1 , 0,
				x+1, y+1 , 0,
				x, y , 0,
				x, y , df[x,y],
				x+1, y+1 , df[x+1,y+1],
				x, y+1 , df[x,y+1]
				)
	pass_2 <- top_constructor(
				x+1, y+1 , 0,
				x+1, y , 0,
				x, y , 0,
				x, y , df[x,y],
				x+1, y ,  df[x+1,y],
				x+1, y+1 , df[x+1,y+1]
				)
	pass_3 <- side_constructor(
				x,   1, 0,
				x+1, 1, 0,
				x+1, 1, df[x+1,y+1],
				x,   1, 0,
				x+1, 1, df[x+1,y+1],
				x,   1, df[x+1,y+1],
				x, ncol(df) , 0,
				x+1, ncol(df) , df[x+1,y],
				x+1, ncol(df) , 0,
				x, ncol(df) , 0,
				x,  ncol(df) ,  df[x,y],
				x+1, ncol(df) , df[x+1,y]
				)
	pass_4 <- side_constructor(
				1,y ,0,
				1,y+1 ,df[x+1,y+1],
				1,y+1 ,0,
				1,y ,0,
				1,y ,df[x+1,y],
				1,y+1 ,df[x+1,y+1],
				nrow(df), y ,0,
				nrow(df), y+1 ,  0,
				nrow(df), y+1 , df[x,y+1],
				nrow(df), y ,  0,
				nrow(df), y+1 ,df[x,y+1],
				nrow(df), y ,  df[x,y]
				)
	con <- file(filename, open = 'w')
	write('solid', file=con)
	walk(seq(nrow(df)-1), function(x) walk(seq(ncol(df)-1),~pass_1(x,.)))
	walk(seq(nrow(df)-1), function(x) walk(seq(ncol(df)-1),~pass_2(x,.)))
	walk(seq(nrow(df)-1), ~pass_3(.,1))
	walk(seq(ncol(df)-1), ~pass_4(1,.))
	write('endsolid', file=con)
	close(con, type ='w')
}

ascii_writer <-  function(triangle,write_file){
		normal <- find_normal(triangle[,1],triangle[,2],triangle[,3])
		 list(
			sprintf('	facet normal %e %e %e',normal[1],normal[2],normal[1]),
			sprintf('		outer loop'),
			sprintf('			vertex %e %e %e', triangle[1,1], triangle[2,1],triangle[3,1]),
			sprintf('			vertex %e %e %e', triangle[1,2], triangle[2,2],triangle[3,2]),
			sprintf('			vertex %e %e %e', triangle[1,3], triangle[2,3],triangle[3,3]),
			sprintf('		endloop'),
			sprintf('	endfacet')
		) %>%
			walk(write, write_file)
}
